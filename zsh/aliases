alias reload="source ~/.zshrc"
alias rmate="mate app config db deploy experiments features lib spec vendor Gemfile Gemfile.lock Guardfile README.md"

# Git
alias s="git status --short"
alias glog="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias gf="git fetch origin"

# ls, the common ones I use a lot shortened for rapid fire usage
alias ls='ls -G'      #I like color
alias l='ls -lFh'     #size,show type,human readable
alias la='ls -lAFh'   #long list,show almost all,show type,human readable
alias lr='ls -tRFh'   #sorted by date,recursive,show type,human readable
alias lt='ls -ltFh'   #long list,sorted by date,show type,human readable
alias ll='ls -l'      #long list
alias ldot='ls -ld .*'

alias grep='grep --color'
alias t='tail -f'
alias h='history'

# Command line head / tail shortcuts
alias -g H='| head'
alias -g T='| tail'
alias -g G='| grep'
alias -g L="| less"
alias -g M="| most"
alias -g LL="2>&1 | less"
alias -g CA="2>&1 | cat -A"
alias -g NE="2> /dev/null"
alias -g NUL="> /dev/null 2>&1"

alias dud='du -d 1 -h'
alias duf='du -sh *'
alias fd='find . -type d -name'
alias ff='find . -type f -name'

alias ..="cd .."

alias cls="clear"

# Development tools
alias yarn='docker run -v `pwd`:/home/node/app -w=/home/node/app --env NODE_ENV=development --env NPM_TOKEN=$NPM_TOKEN --entrypoint yarn -t node:8.9-alpine'
alias yarn87='docker run -v `pwd`:/home/node/app -w=/home/node/app --env NODE_ENV=development --entrypoint yarn -t node:8.7-alpine'
alias yarn83='docker run -v `pwd`:/home/node/app -w=/home/node/app --env NODE_ENV=development --entrypoint yarn -t node:8.3-alpine'
alias yarn6='docker run -v `pwd`:/home/node/app -w=/home/node/app --env NODE_ENV=development --entrypoint yarn -t node:6.11-alpine'

alias dkbs='docker build -t "`basename $(pwd | xargs)`-v1" --build-arg NPM_TOKEN=$NPM_TOKEN .'
alias dkbsd='docker build -t "`basename $(pwd | xargs)`-v1-dev" --build-arg NPM_TOKEN=$NPM_TOKEN -f development.df .'
alias dkrdb='docker run -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=test --name=`basename $(pwd | sed -e "s/-service//g" | xargs)`-db -d -t mysql:5.6'
alias dkrdbi='docker run -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=test -p 3307:3306 --name=`basename $(pwd | sed -e "s/-service//g" | xargs)`-db -d -t mysql:5.6'
alias dkrdbm='docker run --link `basename $(pwd | sed -e "s/-service//g" | xargs)`-db:db --env-file .test.env -v $(pwd)/db:/home/node/app/db -it `basename $(pwd | xargs)`-v1-dev run db-migrate'
alias dkrdbr='docker run --link `basename $(pwd | sed -e "s/-service//g" | xargs)`-db:db --env-file .test.env -v $(pwd)/db:/home/node/app/db -it `basename $(pwd | xargs)`-v1-dev run db-rollback'
alias dkrit='docker run --link `basename $(pwd | sed -e "s/-service//g" | xargs)`-db:db --env-file .test.env -v $(pwd)/test:/home/node/app/test -v $(pwd)/lib:/home/node/app/lib -it `basename $(pwd | xargs)`-v1-dev run test'
alias dkrut='docker run --env-file .test.env -v $(pwd)/test:/home/node/app/test -v $(pwd)/lib:/home/node/app/lib -it `basename $(pwd | xargs)`-v1-dev run test'
alias dkrl='docker run --env-file .test.env -v $(pwd)/test:/home/node/app/test -v $(pwd)/lib:/home/node/app/lib -it `basename $(pwd | xargs)`-v1-dev run lint'

alias t='testlio'
